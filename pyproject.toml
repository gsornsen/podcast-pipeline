[project]
name = "podcast-pipeline"
version = "0.1.0"
description = "Curate datasets, train a voice model for podcast synthesis, and synthesize podcasts."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "prometheus-client>=0.23.1",
    "pydantic>=2.11.9",
    "structlog>=25.4.0",
    "temporalio>=1.18.0",
    "tenacity>=9.1.2",
]

[project.scripts]
voice-dataset-build = "voice_dataset_kit.cli.build_dataset:main"
voice-dataset-review = "voice_dataset_kit.cli.reviewer:main"

[dependency-groups]
dev = [
    "argostranslate>=1.0",
    "flask>=3.1.2",
    "hf-transfer>=0.1.9",
    "librosa>=0.11.0",
    "mypy>=1.18.2",
    "openai-whisper>=20250625",
    "pre-commit>=4.3.0",
    "pyloudnorm>=0.1.1",
    "pysrt>=1.1.2",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "redis>=6.4.0",
    "ruff>=0.13.2",
    "scipy>=1.16.2",
    "sentencepiece==0.2.1",
    "soundfile>=0.13.1",
    "speechbrain>=1.0.3",
    "torch>=2.8.0",
    "torchaudio>=2.8.0",
    "tqdm>=4.67.1",
    "webrtcvad>=2.0.10",
    "webvtt-py>=0.5.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["podcast_pipeline", "voice_dataset_kit"]

# Ruff configuration
[tool.ruff]
line-length = 88
target-version = "py313"
extend-exclude = [
    "__pycache__",
    ".pytest_cache",
    "htmlcov",
    "dist",
    "build",
]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG",    # flake8-unused-arguments
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "RUF",    # ruff-specific rules
]
ignore = [
    "E501",   # line too long (handled by line-length)
    "B008",   # do not perform function calls in argument defaults
    "B904",   # raise from
    "RUF012", # mutable class attributes
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["ARG", "S101"]  # Allow unused args and asserts in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# MyPy configuration
[tool.mypy]
python_version = ">=3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pre-commit configuration
[tool.pre-commit]
default_language_version = {python = ">=3.13"}
